// automatically generated by the FlatBuffers compiler, do not modify

package fbs

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type SharedAttributes struct {
	_tab flatbuffers.Table
}

func GetRootAsSharedAttributes(buf []byte, offset flatbuffers.UOffsetT) *SharedAttributes {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &SharedAttributes{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *SharedAttributes) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *SharedAttributes) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *SharedAttributes) Id() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *SharedAttributes) MutateId(n int64) bool {
	return rcv._tab.MutateInt64Slot(4, n)
}

func (rcv *SharedAttributes) Version() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *SharedAttributes) MutateVersion(n int32) bool {
	return rcv._tab.MutateInt32Slot(6, n)
}

func (rcv *SharedAttributes) Timestamp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *SharedAttributes) Uid() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *SharedAttributes) MutateUid(n int64) bool {
	return rcv._tab.MutateInt64Slot(10, n)
}

func (rcv *SharedAttributes) User() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *SharedAttributes) Changeset() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *SharedAttributes) MutateChangeset(n int64) bool {
	return rcv._tab.MutateInt64Slot(14, n)
}

func SharedAttributesStart(builder *flatbuffers.Builder) {
	builder.StartObject(6)
}
func SharedAttributesAddId(builder *flatbuffers.Builder, id int64) {
	builder.PrependInt64Slot(0, id, 0)
}
func SharedAttributesAddVersion(builder *flatbuffers.Builder, version int32) {
	builder.PrependInt32Slot(1, version, 0)
}
func SharedAttributesAddTimestamp(builder *flatbuffers.Builder, timestamp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(timestamp), 0)
}
func SharedAttributesAddUid(builder *flatbuffers.Builder, uid int64) {
	builder.PrependInt64Slot(3, uid, 0)
}
func SharedAttributesAddUser(builder *flatbuffers.Builder, user flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(user), 0)
}
func SharedAttributesAddChangeset(builder *flatbuffers.Builder, changeset int64) {
	builder.PrependInt64Slot(5, changeset, 0)
}
func SharedAttributesEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
